/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        HomeRow_Left: HomeRow_Left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            require-prior-idle-ms = <500>;
            flavor = "balanced";
            hold-trigger-key-positions = <36 38 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            hold-trigger-on-release;
        };

        HomeRow_Right: HomeRow_Right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            require-prior-idle-ms = <500>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        Gaming {
            bindings = <&tog 6>;
            key-positions = <25 34>;
            layers = <0 6>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q                 &kp W                     &kp E                       &kp R                  &kp T        &kp Y        &kp U                          &kp I                        &kp O                      &kp P                          &none
&none  &HomeRow_Left LWIN A  &HomeRow_Left LEFT_ALT S  &HomeRow_Left LEFT_SHIFT D  &HomeRow_Left LCTRL F  &kp G        &kp H        &HomeRow_Right LEFT_CONTROL J  &HomeRow_Right LEFT_SHIFT K  &HomeRow_Right LEFT_ALT L  &HomeRow_Right LWIN SEMICOLON  &none
&none  &kp Z                 &kp X                     &kp C                       &kp V                  &kp B        &kp N        &kp M                          &kp COMMA                    &kp DOT                    &kp FSLH                       &none
                                                       &lt 1 ESCAPE                &lt 2 SPACE            &lt 3 TAB    &lt 4 ENTER  &lt 4 BACKSPACE                &lt 5 DELETE
            >;
        };

        Media {
            bindings = <
&trans  &kp Q  &kp W  &kp E   &kp R   &kp T     &kp C_BRIGHTNESS_INC  &kp C_PLAY_PAUSE  &kp C_REWIND  &kp C_FF      &none         &trans
&trans  &kp A  &kp S  &kp D   &kp F   &kp G     &kp C_BRIGHTNESS_DEC  &kp C_MUTE        &kp C_VOL_DN  &kp C_VOL_UP  &none         &trans
&trans  &kp Z  &kp X  &kp C   &kp V   &kp B     &bt BT_CLR            &bt BT_SEL 0      &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans
                      &trans  &trans  &trans    &kp ENTER             &kp BACKSPACE     &kp DELETE
            >;
        };

        Navigation {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &none         &none         &none           &none             &none        &kp LC(Y)  &kp HOME       &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &none
&none  &kp LEFT_WIN  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &none        &none      &kp LEFT       &kp DOWN       &kp UP       &kp RIGHT  &none
&none  &kp LC(Z)     &kp LC(X)     &kp LC(C)       &kp LC(V)         &kp LC(Y)    &none      &none          &none          &none        &none      &none
                                   &trans          &trans            &trans       &kp ENTER  &kp BACKSPACE  &kp DEL
            >;
        };

        Number {
            bindings = <
&none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3    &kp NUMBER_4      &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &none
&none  &kp LEFT_WIN  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp EQUAL       &kp ASTERISK  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS      &none
&none  &none         &none         &none           &none             &none           &kp SLASH     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp MINUS     &none
                                   &trans          &trans            &trans          &kp COMMA     &kp NUMBER_0  &kp PERIOD
            >;
        };

        Symbol {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp EXCL      &kp AT        &kp HASH        &kp DLLR   &kp PRCNT        &kp CARET          &kp AMPS        &kp ASTRK  &kp LPAR          &kp RPAR           &none
&none  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LCTRL  &kp BACKSLASH    &kp SQT            &kp MINUS       &kp PLUS   &kp LEFT_BRACE    &kp RIGHT_BRACE    &none
&none  &none         &none         &none           &kp TILDE  &kp PIPE         &kp DOUBLE_QUOTES  &kp UNDERSCORE  &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &none
                                   &kp ESCAPE      &kp SPACE  &kp TAB          &trans             &trans          &trans
            >;
        };

        Fun {
            bindings = <
&none  &none         &none         &none           &none             &none      &kp PRINTSCREEN  &kp F7  &kp F8  &kp F9  &kp F12  &none
&none  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &none      &kp SCROLLLOCK   &kp F4  &kp F5  &kp F6  &kp F11  &none
&none  &none         &none         &none           &none             &none      &kp PAUSE_BREAK  &kp F1  &kp F2  &kp F3  &kp F10  &none
                                   &kp ESCAPE      &kp SPACE         &kp TAB    &trans           &trans  &trans
            >;
        };

        Gaming {
            bindings = <
&none  &kp ESCAPE        &kp Q  &kp W         &kp E      &kp R    &kp Y  &kp U  &kp I      &kp O    &kp P     &none
&none  &kp LEFT_SHIFT    &kp A  &kp S         &kp D      &kp F    &kp H  &kp J  &kp K      &kp L    &kp SEMI  &none
&none  &kp LEFT_CONTROL  &kp Z  &kp X         &kp C      &kp V    &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &none
                                &kp LEFT_ALT  &kp SPACE  &mo 7    &kp T  &kp G  &kp B
            >;
        };

        Gaming_Lower {
            bindings = <
&none  &none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none     &none  &none  &none  &none  &none  &none
&none  &none  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &none     &none  &none  &none  &none  &none  &none
&none  &none  &kp N7        &kp N8        &kp N9        &none     &none  &none  &none  &none  &none  &none
                            &none         &kp SPACE     &trans    &none  &none  &none
            >;
        };
    };
};
